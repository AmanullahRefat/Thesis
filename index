<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kutubdia Island: Research Study Area</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        }
        #map {
            height: 100%;
            width: 100%;
            background-color: #f0f0f0;
        }
        .leaflet-popup-content-wrapper {
            border-radius: 8px;
        }
        .leaflet-popup-content {
            margin: 15px;
            font-size: 14px;
            line-height: 1.6;
        }
        .leaflet-popup-content h3 {
            margin: 0 0 10px;
            color: #004d40;
            border-bottom: 1px solid #eee;
            padding-bottom: 5px;
        }

        /* Legend Styles */
        .legend {
            padding: 10px;
            background: white;
            background: rgba(255,255,255,0.9);
            box-shadow: 0 0 15px rgba(0,0,0,0.2);
            border-radius: 5px;
            line-height: 24px;
            color: #333;
        }
        .legend h4 {
            margin-top: 0;
            margin-bottom: 5px;
            font-size: 16px;
            color: #004d40;
        }
        .legend i {
            width: 20px;
            height: 20px;
            float: left;
            margin-right: 8px;
            opacity: 0.9;
        }
         .legend .line {
            height: 5px;
            border-radius: 5px;
            margin-top: 9px;
            border: 1px solid #555;
        }
    </style>
</head>
<body>

    <div id="map"></div>

    <script>
        // 1. Initialize the map
        const map = L.map('map').setView([21.83, 91.85], 12);

        // 2. Add Basemaps (Satellite and Street)
        const satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
            attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
        });

        const street = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        const baseMaps = {
            "Satellite View": satellite,
            "Street Map": street
        };
        
        L.control.layers(baseMaps).addTo(map);

        // 3. Define Custom Icons
        const communityIcon = L.divIcon({
            html: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#6a1b9a" width="28px" height="28px"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/></svg>',
            className: 'custom-div-icon',
            iconSize: [28, 28],
            iconAnchor: [14, 28],
            popupAnchor: [0, -28]
        });

        // 4. Add Research-Specific Features from GeoJSON files hosted on GitHub
        
        // --- Load Mangrove Greenbelt GeoJSON ---
        fetch('https://raw.githubusercontent.com/AmanullahRefat/Thesis/3d1688056f47d822bc0b0c4f45a0289949530adb/Mangrove.geojson')
            .then(response => response.json())
            .then(data => {
                // Add a white casing for visibility
                L.geoJSON(data, {
                    style: { color: '#ffffff', weight: 7, opacity: 0.7 }
                }).addTo(map);
                // Add the main bright green line
                L.geoJSON(data, {
                    style: {
                        color: '#00ff00', // Bright Green
                        weight: 4
                    }
                }).bindPopup("<h3>Mangrove Greenbelt Zone (NbS)</h3>This area represents the primary location for assessing the 3D structure and effectiveness of the mangrove greenbelts. Drone data and field surveys will be concentrated here.")
                  .addTo(map);
            }).catch(error => console.error('Error loading mangrove GeoJSON:', error));

        // --- Load Coastal Embankment GeoJSON ---
         fetch('https://raw.githubusercontent.com/AmanullahRefat/Thesis/3d1688056f47d822bc0b0c4f45a0289949530adb/PolderEmbankment.geojson')
            .then(response => response.json())
            .then(data => {
                // Add a black casing for visibility
                L.geoJSON(data, {
                    style: { color: '#000000', weight: 5, opacity: 0.6, dashArray: '5, 10' }
                }).addTo(map);
                // Add the main bright yellow line
                L.geoJSON(data, {
                    style: {
                        color: '#ffff00', // Bright Yellow
                        weight: 3,
                        dashArray: '5, 10'
                    }
                }).bindPopup("<h3>Coastal Embankment</h3>The 'grey' infrastructure that works in tandem with the 'green' mangrove belt. Our research investigates the interaction between these two defense systems.")
                  .addTo(map);
            }).catch(error => console.error('Error loading embankment GeoJSON:', error));

        // Community Stakeholder Markers (remain hard-coded as they are points)
        const communityCoords = [
            [21.796409301658763, 91.84443509382197],
            [21.772011434106687, 91.84901888574407],
            [21.78101940234561, 91.8605581307359],
            [21.850904187102227, 91.84545652608105],
            [21.91392658431496, 91.88275826421973],
            [21.857386433626466, 91.88918830461331]
        ];
        communityCoords.forEach(coord => {
            L.marker(coord, { icon: communityIcon }).addTo(map)
                .bindPopup("<h3>Community Stakeholder Area</h3>Key Informant Interviews (KIIs) will be conducted in these settlements to gather socio-institutional context on embankment performance and local perceptions of coastal change.");
        });


        // 5. Add a Legend
        const legend = L.control({position: 'bottomright'});

        legend.onAdd = function (map) {
            const div = L.DomUtil.create('div', 'info legend');
            div.innerHTML = 
                '<h4>Research Legend</h4>' +
                '<i class="line" style="background: #00ff00"></i> Mangrove Greenbelt Zone<br>' +
                '<i class="line" style="background: #ffff00; border: 1px dashed #555;"></i> Coastal Embankment<br>' +
                '<i><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#6a1b9a"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/></svg></i> Community Stakeholder Point';
            return div;
        };

        legend.addTo(map);

    </script>

</body>
</html>

